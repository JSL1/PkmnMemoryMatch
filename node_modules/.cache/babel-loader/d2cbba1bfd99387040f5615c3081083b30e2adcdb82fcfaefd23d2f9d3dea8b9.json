{"ast":null,"code":"var _jsxFileName = \"/home/jeremystpierre/memory-card/src/components/Game.js\",\n  _s = $RefreshSig$();\n//Game.js\nimport React, { Component } from \"react\";\nimport { useState } from \"react\";\nimport uniqid from 'uniqid';\nimport SingleCard from \"./singlecard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"images/charmander.png\"\n}, {\n  \"src\": \"images/cloyster.png\"\n}, {\n  \"src\": \"images/kingler.png\"\n}, {\n  \"src\": \"images/machop.png\"\n}, {\n  \"src\": \"images/slowpoke.png\"\n}, {\n  \"src\": \"images/tauros.png\"\n}];\nconst Game = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiseTwo, setChoiceTwo] = useState(null);\n\n  //shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: uniqid()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  //handle choice\n  const handleChoice = () => {\n    console.log('clicked');\n  };\n  console.log(cards, turns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        func: handleChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"rvjSki+zBU+nnMzyCXReVewQ8Ig=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","Component","useState","uniqid","SingleCard","jsxDEV","_jsxDEV","cardImages","Game","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiseTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","func","_c","$RefreshReg$"],"sources":["/home/jeremystpierre/memory-card/src/components/Game.js"],"sourcesContent":["//Game.js\nimport React, { Component } from \"react\";\nimport { useState } from \"react\";\nimport uniqid from 'uniqid';\nimport SingleCard from \"./singlecard\";\n\nconst cardImages = [\n  {\"src\": \"images/charmander.png\" },\n  {\"src\": \"images/cloyster.png\" },\n  {\"src\": \"images/kingler.png\" },\n  {\"src\": \"images/machop.png\" },\n  {\"src\": \"images/slowpoke.png\" },\n  {\"src\": \"images/tauros.png\" },\n];\n\nconst Game = () => {\n  \n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiseTwo, setChoiceTwo] = useState(null);\n  \n  //shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n        .map((card) => ({...card, id: uniqid() }));\n    \n    setCards(shuffledCards);\n    setTurns(0);\n  }\n  \n  //handle choice\n  const handleChoice = () => {\n    console.log('clicked');\n  }\n  \n  console.log(cards, turns);\n  \n  return (\n    <div id=\"game\">\n      <button onClick={shuffleCards}>New Game</button>\n      <div className=\"card-grid\">\n        {cards.map(card =>  (\n          <SingleCard card={card} func={handleChoice} />\n        ))}\n      </div>\n    </div>\n  );\n  \n}\n\nexport default Game;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAG,CACjB;EAAC,KAAK,EAAE;AAAwB,CAAC,EACjC;EAAC,KAAK,EAAE;AAAsB,CAAC,EAC/B;EAAC,KAAK,EAAE;AAAqB,CAAC,EAC9B;EAAC,KAAK,EAAE;AAAoB,CAAC,EAC7B;EAAC,KAAK,EAAE;AAAsB,CAAC,EAC/B;EAAC,KAAK,EAAE;AAAoB,CAAC,CAC9B;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,GAAG,CAAC,GAAGZ,UAAU,EAAE,GAAGA,UAAU,CAAC,CACjDa,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC7BC,GAAG,CAAEC,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAEC,EAAE,EAAEtB,MAAM,CAAC;IAAE,CAAC,CAAC,CAAC;IAE9CQ,QAAQ,CAACQ,aAAa,CAAC;IACvBN,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;;EAED;EACA,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB,CAAC;EAEDD,OAAO,CAACC,GAAG,CAAClB,KAAK,EAAEE,KAAK,CAAC;EAEzB,oBACEN,OAAA;IAAKmB,EAAE,EAAC,MAAM;IAAAI,QAAA,gBACZvB,OAAA;MAAQwB,OAAO,EAAEZ,YAAa;MAAAW,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChD5B,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAN,QAAA,EACvBnB,KAAK,CAACa,GAAG,CAACC,IAAI,iBACblB,OAAA,CAACF,UAAU;QAACoB,IAAI,EAAEA,IAAK;QAACY,IAAI,EAAEV;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAAAzB,EAAA,CAnCKD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}