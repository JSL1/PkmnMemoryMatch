[{"/home/jeremystpierre/memory-card/src/index.js":"1","/home/jeremystpierre/memory-card/src/App.js":"2","/home/jeremystpierre/memory-card/src/reportWebVitals.js":"3","/home/jeremystpierre/memory-card/src/components/Header.js":"4","/home/jeremystpierre/memory-card/src/components/Game.js":"5","/home/jeremystpierre/memory-card/src/components/Footer.js":"6","/home/jeremystpierre/memory-card/src/components/singlecard.js":"7"},{"size":535,"mtime":1683425039553,"results":"8","hashOfConfig":"9"},{"size":866,"mtime":1683991731503,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1683425039565,"results":"11","hashOfConfig":"9"},{"size":380,"mtime":1683994801972,"results":"12","hashOfConfig":"9"},{"size":3050,"mtime":1683994873763,"results":"13","hashOfConfig":"9"},{"size":196,"mtime":1683559076980,"results":"14","hashOfConfig":"9"},{"size":633,"mtime":1683988669968,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m03kdj",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/home/jeremystpierre/memory-card/src/index.js",[],[],"/home/jeremystpierre/memory-card/src/App.js",[],[],[],"/home/jeremystpierre/memory-card/src/reportWebVitals.js",[],[],"/home/jeremystpierre/memory-card/src/components/Header.js",["41","42"],[],"// header.js\nimport React, { Component } from \"react\";\n\nconst Header = (props) => {\n\n  return (\n    <div id=\"header\">\n      <div className=\"header-flex\">\n        <img src=\"images/pkmnlogo.png\" className=\"logo\" />\n      </div>\n      <div className=\"header-flex\">\n        <h3>Score: {props.score} || Best: {props.maxScore}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","/home/jeremystpierre/memory-card/src/components/Game.js",["43","44","45","46","47"],[],"//Game.js\nimport React, { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport uniqid from 'uniqid';\nimport SingleCard from \"./singlecard\";\n\nconst cardImages = [\n  {\"src\": \"images/charmander.png\", matched: false },\n  {\"src\": \"images/cloyster.png\", matched: false },\n  {\"src\": \"images/kingler.png\", matched: false },\n  {\"src\": \"images/machop.png\", matched: false },\n  {\"src\": \"images/slowpoke.png\", matched: false },\n  {\"src\": \"images/tauros.png\", matched: false },\n];\n\nconst Game = (props) => {\n  \n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  \n  //shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n        .map((card) => ({...card, id: uniqid() }));\n    \n    setCards(shuffledCards);\n    setTurns(0);\n  }\n  \n  //new game\n  const newGame = () => {\n    shuffleCards();\n    props.resetScore();\n  }\n  \n  \n  //handle choice\n  const handleChoice = (card) => {\n    if (choiceOne) {\n      setChoiceTwo(card);\n    } else {\n      setChoiceOne(card);\n    }\n  }\n  \n  //compare two selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      console.log('two cards selected');\n      if (choiceOne.src === choiceTwo.src) {\n        console.log('those cards match');\n        props.scorePoint();\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true};\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        console.log('those cards don\\'t match');\n        props.missGuess();\n        if (props.misses == 9) {\n          setTimeout(() => newGame(), 500);\n        } else {\n          setTimeout(() => resetTurn(), 500);\n        }\n      }\n    }\n  }, [choiceOne, choiceTwo])\n  \n  //reset choices & increase turns\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  }\n  \n  //start a new game automatically\n  useEffect(() => {\n    newGame();\n  }, []);\n  \n  const displayMisses = () => {\n    let msarray = [];\n    for (let i = 0; i < props.misses; i++) {\n      msarray.push(\n        <p className=\"redx\">\n          X\n        </p>\n      );\n    }\n    return msarray;\n  }\n  \n  return (\n    <div id=\"game\">\n      <p> Misses: {props.misses} </p>\n      {displayMisses()}\n      <div className=\"card-grid\">\n        {cards.map(card =>  (\n          <SingleCard\n            card={card}\n            func={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <button onClick={newGame}>New Game</button>\n    </div>\n  );\n  \n}\n\nexport default Game;","/home/jeremystpierre/memory-card/src/components/Footer.js",["48"],[],"/home/jeremystpierre/memory-card/src/components/singlecard.js",["49","50","51","52"],[],"//singlecard.js\nimport React, { Component } from \"react\";\nimport { useState } from \"react\";\n\nconst SingleCard = (props) => {\n  \n  const handleClick = () => {\n    if (!props.disabled) {\n      props.func(props.card);\n    } else {\n      console.log('flipping is disabled.');\n    }\n  }\n  \n  return(\n    <div className=\"card\" key={props.card.id}>\n      <div className={props.flipped ? \"flipped\" : \"\"}>\n        <img className=\"front\" src={props.card.src} />\n        <img\n          className=\"back\"\n          src=\"images/Poke_Ball.png\"\n          onClick={handleClick}\n        />\n      </div>\n    </div>\n  );\n  \n}\n\nexport default SingleCard;",{"ruleId":"53","severity":1,"message":"54","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":9,"column":9,"nodeType":"59","endLine":9,"endColumn":59},{"ruleId":"53","severity":1,"message":"54","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"60","line":19,"column":10,"nodeType":"55","messageId":"56","endLine":19,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":71,"column":26,"nodeType":"63","messageId":"64","endLine":71,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":78,"column":6,"nodeType":"67","endLine":78,"endColumn":28,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":91,"column":6,"nodeType":"67","endLine":91,"endColumn":8,"suggestions":"70"},{"ruleId":"53","severity":1,"message":"71","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"72","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":18,"column":9,"nodeType":"59","endLine":18,"endColumn":55},{"ruleId":"57","severity":1,"message":"58","line":19,"column":9,"nodeType":"59","endLine":23,"endColumn":11},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'turns' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'newGame' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["73"],"React Hook useEffect has a missing dependency: 'newGame'. Either include it or remove the dependency array.",["74"],"'Compontent' is defined but never used.","'useState' is defined but never used.",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [choiceOne, choiceTwo, newGame, props]",{"range":"79","text":"80"},"Update the dependencies array to be: [newGame]",{"range":"81","text":"82"},[2065,2087],"[choiceOne, choiceTwo, newGame, props]",[2351,2353],"[newGame]"]